import requests as req
from itertools import product
from xml.etree.ElementTree import *

#bpage_roots = ["alabama","auburn","birmingham","dothan","gadsden","huntsville","mobile","montgomery","shoals","tuscaloosa","alaska","anchorage","fairbanks","juneau","kenaipeninsula","arizona","flagstaff","mohave","phoenix","prescott","showlow","sierravista","tucson","yuma","arkansas","fayetteville","fortsmith","jonesboro","littlerock","california","bakersfield","chico","fresno","humboldt","imperial","inlandempire","longbeach","losangeles","mendocino","merced","modesto","monterey","northbay","oakland","orangecounty","palmsprings","palmdale","redding","sacramento","sandiego","sanfernandovalley","sanfrancisco","sangabrielvalley","sanjose","sanluisobispo","sanmateo","santabarbara","santacruz","santamaria","siskiyou","stockton","susanville","ventura","visalia","colorado","boulder","coloradosprings","denver","fortcollins","pueblo","rockies","westslope","connecticut","newlondon","hartford","newhaven","nwct","delaware","districtofcolumbia","nova","southernmaryland","dc","florida","daytona","fortlauderdale","fortmyers","gainesville","jacksonville","keys","lakeland","miami","ocala","okaloosa","orlando","panamacity","pensacola","sarasota","spacecoast","staugustine","tallahassee","tampa","treasurecoast","westpalmbeach","georgia","albany","athens","atlanta","augusta","brunswick","columbus","macon","nwga","savannah","statesboro","valdosta","hawaii","bigisland","honolulu","kauai","maui","idaho","boise","eastidaho","lewiston","twinfalls","illinois","bloomington","carbondale","chambana","chicago","decatur","lasalle","mattoon","peoria","rockford","springfield","quincy","indiana","bloomington","evansville","fortwayne","indianapolis","kokomo","lafayette","muncie","richmond","southbend","terrehaute","iowa","ames","cedarrapids","desmoines","dubuque","fortdodge","iowacity","masoncity","quadcities","siouxcity","iowa","waterloo","kansas","lawrence","manhattan","salina","topeka","wichita","kentucky","bowlinggreen","eastky","lexington","louisville","owensboro","westky","louisiana","alexandria","batonrouge","houma","lafayette","lakecharles","monroe","neworleans","shreveport","maine","maryland","annapolis","baltimore","cumberlandvalley","easternshore","frederick","westernmaryland","massachusetts","boston","capecod","southcoast","springfield","worcester","michigan","annarbor","battlecreek","centralmich","detroit","flint","grandrapids","holland","jackson","kalamazoo","lansing","monroe","muskegon","northernmichigan","porthuron","saginaw","swmi","up","minnesota","bemidji","brainerd","duluth","mankato","minneapolis","rochester","stcloud","mississippi","biloxi","hattiesburg","jackson","meridian","northmiss","natchez","missouri","columbia","joplin","kansascity","kirksville","loz","semo","springfield","stjoseph","stlouis","montana","billings","bozeman","butte","greatfalls","helena","kalispell","missoula","nebraska","grandisland","lincoln","northplatte","omaha","scottsbluff","nevada","elko","lasvegas","reno","newhampshire","newjersey","centraljersey","jerseyshore","northjersey","southjersey","newmexico","albuquerque","clovis","farmington","lascruces","roswell","santafe","newyork","albany","binghamton","bronx","brooklyn","buffalo","catskills","chautauqua","elmira","fairfield","fingerlakes","glensfalls","hudsonvalley","ithaca","longisland","manhattan","oneonta","plattsburgh","potsdam","queens","rochester","statenisland","syracuse","twintiers","utica","watertown","westchester","northcarolina","asheville","boone","charlotte","jonesboro","fayetteville","greensboro","hickory","outerbanks","raleigh","wilmington","winstonsalem","northdakota","bismarck","fargo","grandforks","minot","ohio","akron","ashtabula","athens","chillicothe","cincinnati","cleveland","columbus","dayton","huntington","lima","mansfield","sandusky","toledo","tuscarawas","youngstown","zanesville","oklahoma","lawton","norman","oklahomacity","stillwater","tulsa","oregon","bend","corvallis","eastoregon","eugene","klamath","medford","oregoncoast","portland","roseburg","salem","pennsylvania","allentown","altoona","chambersburg","erie","harrisburg","lancaster","meadville","pennstate","philadelphia","pittsburgh","poconos","reading","scranton","williamsport","york","rhodeisland","providence","warwick","southcarolina","charleston","columbia","florence","greenville","hiltonhead","myrtlebeach","southdakota","aberdeen","pierre","rapidcity","siouxfalls","tennessee","chattanooga","clarksville","cookeville","knoxville","memphis","nashville","tricities","texas","abilene","amarillo","austin","beaumont","brownsville","collegestation","corpuschristi","dallas","delrio","denton","elpaso","fortworth","galveston","houston","huntsville","killeen","laredo","lubbock","mcallen","arlington","odessa","sanantonio","sanmarcos","texarkana","texoma","tyler","victoria","waco","wichitafalls","utah","logan","ogden","provo","saltlakecity","stgeorge","vermont","virginia","charlottesville","chesapeake","danville","fredericksburg","hampton","harrisonburg","lynchburg","blacksburg","newportnews","norfolk","portsmouth","richmond","roanoke","swva","suffolk","virginiabeach","washington","bellingham","everett","moseslake","mtvernon","olympia","pullman","seattle","spokane","tacoma","tricities","wenatchee","yakima","westvirginia","charleston","huntington","martinsburg","morgantown","parkersburg","southernwestvirginia","wheeling","wisconsin","appleton","eauclaire","greenbay","janesville","lacrosse","madison","milwaukee","racine","sheboygan","wausau","wyoming", "sanjose"]

bpage_roots = ["arizona","flagstaff","mohave","phoenix","prescott","showlow","sierravista","tucson","yuma","arkansas","fayetteville","fortsmith","jonesboro","littlerock","california","bakersfield","chico","fresno","humboldt","imperial","inlandempire","longbeach","losangeles","mendocino","merced","modesto","monterey","northbay","oakland","orangecounty","palmsprings","palmdale","redding","sacramento","sandiego","sanfernandovalley","sanfrancisco","sangabrielvalley","sanjose","sanluisobispo","sanmateo","santabarbara","santacruz","santamaria","siskiyou","stockton", "sanjose"]


section_ids = [4381]

def doBackpageRequest(phone):
    url_lst = list()
    
    for city, section_id in product(bpage_roots, section_ids):
        query = "http://" + city  +  ".backpage.com/online/classifieds/Search?rd=no&keyword=" + str(phone) +  "&section=" + str(section_id)
        try:
            r = req.get(query)
            if "error" not in r.text:
                url_lst.append(query)
        except req.exceptions.ConnectionError as ce:
            print ce
        except req.exceptions.InvalidURL as iURL:
            print iURL
    print url_lst
    return url_lst

if __name__=="__main__":
    doBackpageRequest('4086342770')
